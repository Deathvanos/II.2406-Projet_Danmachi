Index: Projet_Danmachi/src/main/java/com/isep/appli/controllers/InventoryController.java
===================================================================
diff --git a/Projet_Danmachi/src/main/java/com/isep/appli/controllers/InventoryController.java b/Projet_Danmachi/src/main/java/com/isep/appli/controllers/InventoryController.java
new file mode 100644
--- /dev/null	
+++ b/Projet_Danmachi/src/main/java/com/isep/appli/controllers/InventoryController.java	
@@ -0,0 +1,52 @@
+package com.isep.appli.controllers;
+
+import com.isep.appli.models.Item;
+import com.isep.appli.models.Player;
+import com.isep.appli.services.InventoryService;
+import jakarta.validation.Valid;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.servlet.ModelAndView;
+
+import java.util.Map;
+
+@Controller
+public class InventoryController {
+
+    @Autowired
+    private InventoryService inventoryService;
+
+
+    /*******************************************************************************/
+    /******************************** ALL ******************************************/
+    /*******************************************************************************/
+
+
+    /*******************************************************************************/
+    /******************************** GUEST ****************************************/
+    /*******************************************************************************/
+
+
+    /*******************************************************************************/
+    /******************************** PLAYER ***************************************/
+    /*******************************************************************************/
+
+    @GetMapping("/inventory")
+    public ModelAndView inventory() {
+        Map<Item,Integer> playerInventory = inventoryService.getPlayerInventory(1L);
+
+        ModelAndView modelAndView = new ModelAndView("inventory");
+        modelAndView.addObject("playerInventory", playerInventory);
+        modelAndView.addObject("item",new Item());
+        return modelAndView;
+    }
+
+    @PostMapping("/inventory")
+    public String searchItem(@Valid Item item, BindingResult result, Model model){
+        return "redirect:/inventory";
+    }
+}
\ No newline at end of file
Index: Projet_Danmachi/src/main/java/com/isep/appli/services/InventoryService.java
===================================================================
diff --git a/Projet_Danmachi/src/main/java/com/isep/appli/services/InventoryService.java b/Projet_Danmachi/src/main/java/com/isep/appli/services/InventoryService.java
new file mode 100644
--- /dev/null	
+++ b/Projet_Danmachi/src/main/java/com/isep/appli/services/InventoryService.java	
@@ -0,0 +1,51 @@
+package com.isep.appli.services;
+
+import com.isep.appli.models.Inventory;
+import com.isep.appli.models.Item;
+import com.isep.appli.repositories.InventoryRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Optional;
+
+
+@Service
+public class InventoryService {
+
+	@Autowired
+	private InventoryRepository inventoryRepository;
+	@Autowired
+	private ItemService itemService;
+	
+	public Iterable<Inventory> getAll() {
+		return inventoryRepository.findAll();
+	}
+	
+	public Optional<Inventory> getById(Long id) {
+		return inventoryRepository.findById(id);
+	}
+
+	public Map<Item, Integer> getPlayerInventory(Long playerId){
+		Map<Item, Integer> inventory = new HashMap<>();
+		List<Inventory> inventoryList = inventoryRepository.findByIdPlayer(playerId);
+		for(Inventory inventorySlots : inventoryList){
+			Item item = itemService.getById(inventorySlots.getIdItem()).get();
+			inventory.put(item, inventorySlots.getQuantity());
+		}
+		return inventory;
+	}
+	public Inventory save(Inventory inventory) {
+		return inventoryRepository.save(inventory);
+	}
+	
+	public void delete(Inventory inventory) {
+		inventoryRepository.delete(inventory);
+	}
+	
+	public List<Inventory> findById(long id) {
+		return this.inventoryRepository.findById(id);
+	}
+}
Index: Projet_Danmachi/src/main/java/com/isep/appli/repositories/InventoryRepository.java
===================================================================
diff --git a/Projet_Danmachi/src/main/java/com/isep/appli/repositories/InventoryRepository.java b/Projet_Danmachi/src/main/java/com/isep/appli/repositories/InventoryRepository.java
new file mode 100644
--- /dev/null	
+++ b/Projet_Danmachi/src/main/java/com/isep/appli/repositories/InventoryRepository.java	
@@ -0,0 +1,14 @@
+package com.isep.appli.repositories;
+
+import com.isep.appli.models.Inventory;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+
+@Repository
+public interface InventoryRepository extends JpaRepository<Inventory, Long> {
+	List<Inventory> findById(long id);
+	List<Inventory> findByIdPlayer(long id);
+}
Index: Projet_Danmachi/src/main/java/com/isep/appli/controllers/ItemController.java
===================================================================
diff --git a/Projet_Danmachi/src/main/java/com/isep/appli/controllers/ItemController.java b/Projet_Danmachi/src/main/java/com/isep/appli/controllers/ItemController.java
new file mode 100644
--- /dev/null	
+++ b/Projet_Danmachi/src/main/java/com/isep/appli/controllers/ItemController.java	
@@ -0,0 +1,28 @@
+package com.isep.appli.controllers;
+
+import com.isep.appli.services.ItemService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+
+@Controller
+public class ItemController {
+
+	@Autowired
+	private ItemService itemService;
+
+
+	/*******************************************************************************/
+	/******************************** ALL ******************************************/
+	/*******************************************************************************/
+
+
+	/*******************************************************************************/
+	/******************************** GUEST ****************************************/
+	/*******************************************************************************/
+
+
+	/*******************************************************************************/
+	/******************************** PLAYER ***************************************/
+	/*******************************************************************************/
+
+}
\ No newline at end of file
Index: Projet_Danmachi/src/main/resources/templates/inventory.html
===================================================================
diff --git a/Projet_Danmachi/src/main/resources/templates/inventory.html b/Projet_Danmachi/src/main/resources/templates/inventory.html
new file mode 100644
--- /dev/null	
+++ b/Projet_Danmachi/src/main/resources/templates/inventory.html	
@@ -0,0 +1,62 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org" lang="fr">
+<head>
+    <meta charset="utf-8">
+    <meta http-equiv="X-UA-Compatible" content="IE-edge">
+    <meta name="viewport" content="width=device-width, initial-scale=1">
+    <link th:rel="stylesheet" th:href="@{/webjars/bootstrap/4.6.2/css/bootstrap.min.css}"/>
+    <title>Danmachi - Inventory</title>
+</head>
+<body>
+    <div class="container-fluid text-center">
+        <div class="row vh-100">
+            <div class="col-sm-4 d-flex flex-column" style="background-color:#67819A; font-family: Inter;">
+                <h2 class="text-white text-left font-weight-bold">
+                    Inventaire de Rosa Van Nymphela
+                </h2>
+                <form action="#" th:action="@{/inventory}" th:object="${item}" method="POST">
+                    <div class="form-group d-flex flex-column align-content-start justify-content-start">
+                        <input class="form-control mt-3" type="text" th:field="*{name}" id="name" placeholder="Recherche ...">
+                        <div class="form-check">
+                            <label class="form-check-label text-white text-left font-weight-bold">
+                                <input type="radio" class="form-check-input" name="category">Equipement
+                            </label>
+                        </div>
+                        <div class="form-check">
+                            <label class="form-check-label text-white text-left font-weight-bold">
+                                <input type="radio" class="form-check-input" name="category">Consomable
+                            </label>
+                        </div>
+                        <div class="form-check">
+                            <label class="form-check-label text-white text-left font-weight-bold">
+                                <input type="radio" class="form-check-input" name="category">Ressource
+                            </label>
+                        </div>
+                        <div class="form-check">
+                            <label class="form-check-label text-white text-left font-weight-bold">
+                                <input type="radio" class="form-check-input" name="category">Artefact
+                            </label>
+                        </div>
+                        <button type="submit" class="btn btn-light btn-outline-success mt-3">Submit</button>
+                    </div>
+                </form>
+            </div>
+            <div class="col-sm-8 d-flex flex-column h-100" style="background-color:#D5E4D9;">
+                <div class="container text-center d-flex flex-row flex-wrap p-10 h-100" >
+                    <th:block th:unless="${playerInventory.isEmpty()}" th:each="item : ${playerInventory.keySet()}">
+                        <div class="card my-3 w-25 h-25" >
+                            <div class="card-body" style="background-color:#D9D9D9;">
+                                <img th:unless="${item.getUrlImage().equals('Null')}" src="${item.urlImage}" class="mx-auto d-block">
+                            </div>
+                            <div class="card-footer text-left" th:text="${playerInventory.get(item) + ' x ' + item.getName()}" style="background-color:#FFFFFF; font-family: Inter;"></div>
+                        </div>
+                        <div class="col-sm-1"></div>
+                    </th:block>
+
+                </div>
+            </div>
+        </div>
+    </div>
+    <script> th:src="@{/webjars/bootstrap/4.6.2/css/bootstrap.min.css}"</script>
+</body>
+</html>
\ No newline at end of file
Index: Projet_Danmachi/src/main/java/com/isep/appli/repositories/ItemRepository.java
===================================================================
diff --git a/Projet_Danmachi/src/main/java/com/isep/appli/repositories/ItemRepository.java b/Projet_Danmachi/src/main/java/com/isep/appli/repositories/ItemRepository.java
new file mode 100644
--- /dev/null	
+++ b/Projet_Danmachi/src/main/java/com/isep/appli/repositories/ItemRepository.java	
@@ -0,0 +1,15 @@
+package com.isep.appli.repositories;
+
+import com.isep.appli.models.Item;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+
+@Repository
+public interface ItemRepository extends JpaRepository<Item, Long> {
+	
+	public List<Item> findById(long id);
+
+}
Index: Projet_Danmachi/src/main/java/com/isep/appli/models/Inventory.java
===================================================================
diff --git a/Projet_Danmachi/src/main/java/com/isep/appli/models/Inventory.java b/Projet_Danmachi/src/main/java/com/isep/appli/models/Inventory.java
new file mode 100644
--- /dev/null	
+++ b/Projet_Danmachi/src/main/java/com/isep/appli/models/Inventory.java	
@@ -0,0 +1,29 @@
+package com.isep.appli.models;
+
+import jakarta.persistence.*;
+import lombok.Getter;
+import lombok.Setter;
+
+import java.io.Serializable;
+import java.time.Instant;
+
+@Getter
+@Setter
+@Entity
+@Table(name = "inventory")
+public class Inventory implements Serializable {
+	private static final long serialVersionUID = 1L;
+	
+	@Id
+	@GeneratedValue(strategy=GenerationType.AUTO)
+	private Long id;
+	private Long idItem;
+	private Long idPlayer;
+	private int quantity;
+
+	@Override
+	public String toString() {
+		return "Item [id=" + id + ", idItem=" + idItem + "idPlayer=" + idPlayer + "quantity=" + quantity
+				+ "]";
+	}
+}
Index: Projet_Danmachi/src/main/java/com/isep/appli/services/ItemService.java
===================================================================
diff --git a/Projet_Danmachi/src/main/java/com/isep/appli/services/ItemService.java b/Projet_Danmachi/src/main/java/com/isep/appli/services/ItemService.java
new file mode 100644
--- /dev/null	
+++ b/Projet_Danmachi/src/main/java/com/isep/appli/services/ItemService.java	
@@ -0,0 +1,42 @@
+package com.isep.appli.services;
+
+import com.isep.appli.models.Item;
+import com.isep.appli.repositories.ItemRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.time.Instant;
+import java.util.List;
+import java.util.Optional;
+
+
+@Service
+public class ItemService {
+
+	@Autowired
+	private ItemRepository itemRepository;
+	
+	public Iterable<Item> getAll() {
+		return itemRepository.findAll();
+	}
+	
+	public Optional<Item> getById(Long id) {
+		return itemRepository.findById(id);
+	}
+	
+	public Item save(Item item) {
+		if (item.getId() == null) {
+			item.setCreatedAt(Instant.now());
+		}
+		item.setUpdatedAt(Instant.now());
+		return itemRepository.save(item);
+	}
+	
+	public void delete(Item item) {
+		itemRepository.delete(item);
+	}
+	
+	public List<Item> findById(long id) {
+		return this.itemRepository.findById(id);
+	}
+}
Index: Projet_Danmachi/src/main/java/com/isep/appli/models/Item.java
===================================================================
diff --git a/Projet_Danmachi/src/main/java/com/isep/appli/models/Item.java b/Projet_Danmachi/src/main/java/com/isep/appli/models/Item.java
new file mode 100644
--- /dev/null	
+++ b/Projet_Danmachi/src/main/java/com/isep/appli/models/Item.java	
@@ -0,0 +1,33 @@
+package com.isep.appli.models;
+
+import jakarta.persistence.*;
+import lombok.Getter;
+import lombok.Setter;
+
+import java.io.Serializable;
+import java.time.Instant;
+
+@Getter
+@Setter
+@Entity
+@Table(name = "item")
+public class Item implements Serializable {
+	private static final long serialVersionUID = 1L;
+	
+	@Id
+	@GeneratedValue(strategy=GenerationType.AUTO)
+	private Long id;
+	private String name;
+	private String urlImage;
+	private boolean canUse;
+	private String description;
+	private String useDescription;
+	private Instant createdAt;
+	private Instant updatedAt;
+	@Override
+	public String toString() {
+		return "Item [id=" + id + ", name=" + name + "urlImage=" + urlImage + "description=" + description + "canUse=" + canUse +
+				"useDescription=" + useDescription + "createdAt=" + createdAt + "updatedAt=" + updatedAt
+				+ "]";
+	}
+}
